{
  "name": "smooth-scroll",
  "version": "9.1.1",
  "description": "Animate scrolling to anchor links",
  "main": "./dist/js/smooth-scroll.min.js",
  "author": {
    "name": "Chris Ferdinandi",
    "url": "http://gomakethings.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/cferdinandi/smooth-scroll.git"
  },
  "devDependencies": {
    "gulp": "^3.9.0",
    "node-fs": "^0.1.7",
    "del": "^1.2.0",
    "lazypipe": "^0.2.4",
    "gulp-plumber": "^1.0.1",
    "gulp-flatten": "^0.0.4",
    "gulp-tap": "^0.1.3",
    "gulp-rename": "^1.2.2",
    "gulp-header": "1.2.2",
    "gulp-footer": "^1.0.5",
    "gulp-watch": "^4.2.4",
    "gulp-livereload": "^3.8.0",
    "gulp-jshint": "^1.11.1",
    "jshint-stylish": "^2.0.1",
    "gulp-concat": "^2.6.0",
    "gulp-uglify": "^1.2.0",
    "phantomjs": "^1.9.19",
    "karma": "^0.12.37",
    "gulp-karma": "^0.0.4",
    "karma-coverage": "^0.4.2",
    "jasmine": "^2.3.1",
    "jasmine-core": "^2.4.1",
    "karma-jasmine": "^0.3.6",
    "karma-phantomjs-launcher": "^0.2.0",
    "karma-spec-reporter": "^0.0.19",
    "karma-htmlfile-reporter": "^0.2.1",
    "gulp-markdown": "^1.0.0",
    "gulp-file-include": "^0.11.1"
  },
  "gitHead": "761319cdaf5ad9f4d3ed29567eaa2f0336d3d15a",
  "readme": "# Smooth Scroll [![Build Status](https://travis-ci.org/cferdinandi/smooth-scroll.svg)](https://travis-ci.org/cferdinandi/smooth-scroll)\nA lightweight script to animate scrolling to anchor links. Smooth Scroll works great with [Gumshoe](https://github.com/cferdinandi/gumshoe).\n\n[Download Smooth Scroll](https://github.com/cferdinandi/smooth-scroll/archive/master.zip) / [View the demo](http://cferdinandi.github.io/smooth-scroll/)\n\n\n\n## Getting Started\n\nCompiled and production-ready code can be found in the `dist` directory. The `src` directory contains development code. Unit tests are located in the `test` directory.\n\n### 1. Include Smooth Scroll on your site.\n\n```html\n<script src=\"dist/js/smooth-scroll.js\"></script>\n```\n\n### 2. Add the markup to your HTML.\n\nTurn anchor links into Smooth Scroll links by adding the `[data-scroll]` data attribute. Give the anchor location an ID just like you normally would.\n\n```html\n<a data-scroll href=\"#bazinga\">Anchor Link</a>\n...\n<span id=\"bazinga\">Bazinga!</span>\n```\n\n### 3. Initialize Smooth Scroll.\n\nIn the footer of your page, after the content, initialize Smooth Scroll. And that's it, you're done. Nice work!\n\n```html\n<script>\n\tsmoothScroll.init();\n</script>\n```\n\n\n\n## Installing with Package Managers\n\nYou can install Smooth Scroll with your favorite package manager.\n\n* **[NPM](https://www.npmjs.org/):** `npm install cferdinandi/smooth-scroll`\n* **[Bower](http://bower.io/):** `bower install https://github.com/cferdinandi/smooth-scroll.git`\n* **[Component](http://component.io/):** `component install cferdinandi/smooth-scroll`\n\n\n\n## Working with the Source Files\n\nIf you would prefer, you can work with the development code in the `src` directory using the included [Gulp build system](http://gulpjs.com/). This compiles, lints, and minifies code, and runs unit tests.\n\n### Dependencies\nMake sure these are installed first.\n\n* [Node.js](http://nodejs.org)\n* [Gulp](http://gulpjs.com) `sudo npm install -g gulp`\n\n### Quick Start\n\n1. In bash/terminal/command line, `cd` into your project directory.\n2. Run `npm install` to install required files.\n3. When it's done installing, run one of the task runners to get going:\n\t* `gulp` manually compiles files.\n\t* `gulp watch` automatically compiles files when changes are made and applies changes using [LiveReload](http://livereload.com/).\n\t* `gulp test` compiles files and runs unit tests.\n\n\n\n## Options and Settings\n\nSmooth Scroll includes smart defaults and works right out of the box. But if you want to customize things, it also has a robust API that provides multiple ways for you to adjust the default options and settings.\n\n### Global Settings\n\nYou can pass options and callbacks into Smooth Scroll through the `init()` function:\n\n```javascript\nsmoothScroll.init({\n\tselector: '[data-scroll]', // Selector for links (must be a valid CSS selector)\n\tselectorHeader: '[data-scroll-header]', // Selector for fixed headers (must be a valid CSS selector)\n\tspeed: 500, // Integer. How fast to complete the scroll in milliseconds\n\teasing: 'easeInOutCubic', // Easing pattern to use\n\toffset: 0, // Integer. How far to offset the scrolling anchor location in pixels\n\tupdateURL: true, // Boolean. If true, update the URL hash on scroll\n\tcallback: function ( anchor, toggle ) {} // Function to run after scrolling\n});\n```\n\n#### Easing Options\n\n**Linear**\n*Moves at the same speed from start to finish.*\n\n* `Linear`\n\n\n**Ease-In**\n*Gradually increases in speed.*\n\n* `easeInQuad`\n* `easeInCubic`\n* `easeInQuart`\n* `easeInQuint`\n\n\n**Ease-In-Out**\n*Gradually increases in speed, peaks, and then gradually slows down.*\n\n* `easeInOutQuad`\n* `easeInOutCubic`\n* `easeInOutQuart`\n* `easeInOutQuint`\n\n\n**Ease-Out**\n*Gradually decreases in speed.*\n\n* `easeOutQuad`\n* `easeOutCubic`\n* `easeOutQuart`\n* `easeOutQuint`\n\n\nLearn more about the different easing patterns and what they do at [easings.net](http://easings.net/).\n\n### Override settings with data attributes\n\nSmooth Scroll also lets you override global settings on a link-by-link basis using the `[data-options]` data attribute.\n\n```html\n<a data-scroll\n   data-options='{\n\t\t\t\t\t\"speed\": 500,\n\t\t\t\t\t\"easing\": \"easeInOutCubic\",\n\t\t\t\t\t\"offset\": 0\n\t\t\t\t}'\n>\n\tAnchor Link\n</a>\n```\n\n***Note:*** *You must use [valid JSON](http://jsonlint.com/) in order for the `data-options` feature to work. Does not support the `callback` method.*\n\n### Use Smooth Scroll events in your own scripts\n\nYou can also call Smooth Scroll's scroll animation events in your own scripts.\n\n#### animateScroll()\nAnimate scrolling to an anchor.\n\n```javascript\nsmoothScroll.animateScroll(\n\tanchor, // ID of the anchor to scroll to. ex. '#bazinga'\n\ttoggle, // Node that toggles the animation, OR an integer. ex. document.querySelector('#toggle')\n\toptions // Classes and callbacks. Same options as those passed into the init() function.\n);\n```\n\n**Example 1**\n\n```javascript\nsmoothScroll.animateScroll( '#bazinga' );\n```\n\n**Example 2**\n\n```javascript\nvar toggle = document.querySelector('#toggle');\nvar options = { speed: 1000, easing: 'easeOutCubic' };\nsmoothScroll.animateScroll( '#bazinga', toggle, options );\n```\n\n**Example 3**\n\n```javascript\nsmoothScroll.animateScroll( 750 );\n```\n\n#### escapeCharacters()\nEscape special characters for use with `animateScroll()`.\n\n```javascript\nvar toggle = smoothScroll.escapeCharacters('#1@#%^-');\n```\n\n#### destroy()\nDestroy the current `smoothScroll.init()`. This is called automatically during the `init` function to remove any existing initializations.\n\n```javascript\nsmoothScroll.destroy();\n```\n\n\n### Fixed Headers\n\nAdd a `[data-scroll-header]` data attribute to fixed headers. Smooth Scroll will automatically offset scroll distances by the header height. If you have multiple fixed headers, add `[data-scroll-header]` to the last one in the markup.\n\n```html\n<nav data-scroll-header>\n\t...\n</nav>\n```\n\n### Animating links to other pages\n\nThis is an often requested feature, but Smooth Scroll does not include an option to animate scrolling to links on other pages.\n\nYou can attempt to implement it using the API, but it's very difficult to prevent the automatic browser jump when the page loads, and anything I've done to work around it results in weird, janky issues, so I've decided to leave this out of the core. Here's a potential workaround...\n\n1. Do *not* add the `data-scroll` attribute to links to other pages. Treat them like normal links, and include your anchor link hash as normal.\n\n    ```html\n    <a href=\"some-page.html#example\">\n    ```\n2. Add the following script to the footer of your page, after the `smoothScroll.init()` function.\n\n    ```html\n    <script>\n        if ( window.location.hash ) {\n        \tvar hash = smoothScroll.escapeCharacters( window.location.hash ); // Escape the hash\n        \tvar toggle = document.querySelector( 'a[href*=\"' + hash + '\"]' ); // Get the toggle (if one exists)\n            var options = {}; // Any custom options you want to use would go here\n            smoothScroll.animateScroll( hash, toggle, options );\n        }\n    </script>\n    ```\n\n\n## Browser Compatibility\n\nSmooth Scroll works in all modern browsers, and IE 9 and above.\n\nSmooth Scroll is built with modern JavaScript APIs, and uses progressive enhancement. If the JavaScript file fails to load, or if your site is viewed on older and less capable browsers, anchor links will jump the way they normally would. If you need to smooth scrolling for older browsers, [download the jQuery version of Smooth Scroll on GitHub](https://github.com/cferdinandi/smooth-scroll/tree/archive-v1).\n\n\n\n## Known Issues\n\nIf the `<body>` element has been assigned a height of `100%` or `overflow: hidden`, Smooth Scroll is unable to properly calculate page distances and will not scroll to the right location. The `<body>` element can have a fixed, non-percentage based height (ex. `500px`), or a height of `auto`, and an `overflow` of `visible`.\n\n\n## Programatically adding `[data-scroll]` attributes to all anchor links\n\nUseful if you have anchor links scattered throughout a page, or if you're using WordPress's `wp_nav_menu()` function. Add this code to your JavaScript:\n\n```js\n;(function (window, document, undefined) {\n\n\t'use strict';\n\n\t// Cut the mustard\n\tvar supports = 'querySelector' in document && 'addEventListener' in window;\n\tif ( !supports ) return;\n\n\t// Get all anchors\n\tvar anchors = document.querySelectorAll( '[href*=\"#\"]' );\n\n\t// Add smooth scroll to all anchors\n\tfor ( var i = 0, len = anchors.length; i < len; i++ ) {\n\t\tvar url = new RegExp( window.location.hostname + window.location.pathname );\n\t\tif ( !url.test( anchors[i].href ) ) continue;\n\t\tanchors[i].setAttribute( 'data-scroll', true );\n\t}\n\n\t// Initial smooth scroll (add your attributes as desired)\n\tsmoothScroll.init();\n\n})(window, document);\n```\n\n\n\n## How to Contribute\n\nIn lieu of a formal style guide, take care to maintain the existing coding style. Please apply fixes to both the development and production code. Don't forget to update the version number, and when applicable, the documentation.\n\n\n\n## License\n\nThe code is available under the [MIT License](LICENSE.md).",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cferdinandi/smooth-scroll/issues"
  },
  "homepage": "https://github.com/cferdinandi/smooth-scroll#readme",
  "_id": "smooth-scroll@9.1.1",
  "_shasum": "322bb5b40d99e5d4cc2d8c3241af0ebd4dd86a2c",
  "_from": "cferdinandi/smooth-scroll",
  "_resolved": "git://github.com/cferdinandi/smooth-scroll.git#761319cdaf5ad9f4d3ed29567eaa2f0336d3d15a"
}
